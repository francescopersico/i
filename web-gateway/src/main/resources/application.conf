lagom.circuit-breaker.default.call-timeout = 5s

play.application.loader = WebGatewayLoader

play.crypto.secret = "somesecret"

play.http.errorHandler = WebGatewayErrorHandler

play {
  modules {
    enabled += be.objectify.deadbolt.scala.DeadboltModule
    enabled += com.example.modules.CustomDeadboltHook
  }
}

# Mailer
# ~~~~~

play.mailer {
  # SMTP serveur, example : smtp.gmail.com
  host=smtp.gmail.com

  # Mail Port, example : 465, 587 or 25
  port=465

  # Mail Auth User, example : user@gmail.com
  user="your@gmail.com"

  # Mail Auth Password
  password=yourpassword

  # Mail SSL : true or false
  ssl=true

  # Will only log all the email properties instead of sending an email
  mock=true

  # Mail user from
  from="your@gmail.com"
}

# Silhouette Authentication
# ~~~~~

silhouette {
  authenticator {
    cookieName="id"
    cookiePath="/"
    secureCookie=false # Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
    httpOnlyCookie=true
    useFingerprinting=true
    authenticatorIdleTimeout=30 minutes
    authenticatorExpiry=12 hours

    rememberMe {
      cookieMaxAge=30 days
      authenticatorIdleTimeout=5 days
      authenticatorExpiry=30 days
    }

    cookie.signer {
      key = "[changeme]" # A unique encryption key
      pepper = "-mohiva-silhouette-cookie-signer-" # Constant prepended and appended to the data before signing. When using one key for multiple purposes, using a specific pepper reduces some risks arising from this.
    }
    crypter.key = "[changeme]" # A unique encryption key
  }
}

include "silhouette.conf"